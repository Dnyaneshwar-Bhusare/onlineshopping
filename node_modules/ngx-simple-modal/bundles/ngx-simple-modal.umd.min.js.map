{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-simple-modal/simple-modal/simple-modal-options.ts","ng://ngx-simple-modal/simple-modal/simple-modal-wrapper.component.ts","ng://ngx-simple-modal/simple-modal/simple-modal-holder.component.ts","ng://ngx-simple-modal/simple-modal/simple-modal.service.ts","ng://ngx-simple-modal/simple-modal/simple-modal-service.factory.ts","ng://ngx-simple-modal/simple-modal/simple-modal.module.ts","ng://ngx-simple-modal/simple-modal/simple-modal.component.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","DefaultSimpleModalOptionConfig","InjectionToken","defaultSimpleModalOptions","closeOnEscape","closeOnClickOutside","bodyClass","wrapperDefaultClasses","wrapperClass","animationDuration","autoFocus","SimpleModalWrapperComponent","resolver","this","modalClasses","prototype","addComponent","component","factory","resolveComponentFactory","injector","ReflectiveInjector","fromResolvedProviders","viewContainer","componentRef","create","insert","hostView","content","instance","wrapper","onClickOutsideModalContent","contentClass","callback","clickOutsideCallback","containerEl","nativeElement","querySelector","addEventListener","stopEventPropagation","ngOnDestroy","removeEventListener","event","stopPropagation","ComponentFactoryResolver","tslib_1.__decorate","ViewChild","read","ViewContainerRef","static","ElementRef","Component","selector","template","SimpleModalHolderComponent","modals","previousActiveElement","addModal","data","options","_this","of","modalWrapper","createComponent","_component","assign","wait","then","toggleWrapperClass","toggleBodyClass","autoFocusFirstElement","markAsReady","onClosing","modal","removeModal","configureCloseOnClickOutside","mapDataObject","setupObserver","closingModal","removeModalFromArray","restorePreviousFocus","removeAllModals","Promise","all","map","body","document","getElementsByTagName","bodyClassItems","split","_b","classList","add","apply","_a","remove","close","componentWrapper","focusable","querySelectorAll","activeElement","focus","modalWrapperEl","wrapperClassList","wrapperClassItems","toString","indexOf","ms","resolve","reject","setTimeout","index","splice","Inject","args","tslib_1.__param","container","SimpleModalService","applicationRef","config","modalHolderComponent","createSimpleModalHolder","removeAll","_container","getElementById","componentRootViewContainer","rootNodes","componentRootNode","attachView","onDestroy","detachView","appendChild","ApplicationRef","Injector","SimpleModalServiceConfig","type","Optional","Injectable","SimpleModalServiceFactory","SimpleModalModule","forRoot","defaultModalOptions","ngModule","SimpleModalModule_1","providers","provide","useValue","useFactory","deps","NgModule","declarations","Éµ0","imports","CommonModule","entryComponents","SimpleModalComponent","_ready$","BehaviorSubject","closerCallback","keys","length_1","Observable","observer","completeOnDestroy","onKeydownHandler","evt","asObservable","ngDestroyOriginal","result","complete","HostListener"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const DefaultSimpleModalOptionConfig = new InjectionToken<SimpleModalOptions>('default-simple-modal.config');\n\nexport interface SimpleModalOptions {\n  closeOnEscape: boolean;\n  closeOnClickOutside: boolean;\n  bodyClass: string;\n  wrapperDefaultClasses: string;\n  wrapperClass: string;\n  animationDuration: number;\n  autoFocus: boolean;\n}\n\nexport type SimpleModalOptionsOverrides = Partial<SimpleModalOptions>;\n\nexport const defaultSimpleModalOptions: SimpleModalOptions = {\n  closeOnEscape: false,\n  closeOnClickOutside: false,\n  bodyClass: 'modal-open',\n  wrapperDefaultClasses: 'modal fade-anim',\n  wrapperClass: 'in',\n  animationDuration: 300,\n  autoFocus: false\n};\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  OnDestroy,\n  ReflectiveInjector,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { SimpleModalComponent } from './simple-modal.component';\n\n/**\n * The modal backdrop wrapping wrapper to the modal\n */\n@Component({\n  selector: 'simple-modal-wrapper',\n  template: `\n    <div #wrapper [ngClass]=\"modalClasses\" [ngStyle]=\"{ display: 'block' }\" role=\"dialog\">\n      <ng-template #viewContainer></ng-template>\n    </div>\n  `,\n})\nexport class SimpleModalWrapperComponent implements OnDestroy {\n  /**\n   * Target viewContainer to insert modal content component\n   */\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\n\n  /**\n   * Link wrapper DOM element\n   */\n  @ViewChild('wrapper', { read: ElementRef, static: true })\n  wrapper: ElementRef;\n\n  /**\n   * Wrapper modal and fade classes\n   */\n  modalClasses = 'modal fade-anim';\n\n  /**\n   * Dialog content componet\n   * @type {SimpleModalComponent}\n   */\n  content: SimpleModalComponent<any, any>;\n\n  /**\n   * Click outside callback\n   */\n  clickOutsideCallback: () => void;\n\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   */\n  constructor(private resolver: ComponentFactoryResolver) {}\n\n  /**\n   * Adds content modal component to wrapper\n   * @param {Type<SimpleModalComponent>} component\n   * @return {SimpleModalComponent}\n   */\n  addComponent<T, T1>(component: Type<SimpleModalComponent<T, T1>>) {\n    const factory = this.resolver.resolveComponentFactory(component);\n    const injector = ReflectiveInjector.fromResolvedProviders([], this.viewContainer.injector);\n    const componentRef = factory.create(injector);\n    this.viewContainer.insert(componentRef.hostView);\n    this.content = <SimpleModalComponent<T, T1>>componentRef.instance;\n    this.content.wrapper = this.wrapper;\n    return this.content;\n  }\n\n  /**\n   * Configures the function to call when you click on background of a modal but not the contents\n   * @param callback\n   */\n  onClickOutsideModalContent(contentClass: boolean, callback: () => void) {\n    this.clickOutsideCallback = callback;\n    const containerEl = this.wrapper.nativeElement;\n    const contentEl = containerEl.querySelector(':first-child');\n    contentEl.addEventListener('click', this.stopEventPropagation);\n    containerEl.addEventListener('click', this.clickOutsideCallback, false);\n  }\n\n  ngOnDestroy() {\n    if (this.clickOutsideCallback) {\n      const containerEl = this.wrapper.nativeElement;\n      containerEl\n        .querySelector(':first-child')\n        .removeEventListener('click', this.stopEventPropagation);\n      containerEl.removeEventListener('click', this.clickOutsideCallback, false);\n      this.clickOutsideCallback = null;\n    }\n  }\n\n  /**\n   * Helper function to stop event propagation, as a function so easily unlistened to\n   * @param event\n   */\n  private stopEventPropagation(event) {\n    event.stopPropagation();\n  }\n}\n","import {\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  Inject,\n  Type,\n  ViewContainerRef,\n  ViewChild,\n} from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  DefaultSimpleModalOptionConfig,\n  SimpleModalOptions,\n  SimpleModalOptionsOverrides,\n} from './simple-modal-options';\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\nimport { SimpleModalComponent } from './simple-modal.component';\n\n/**\n * View container manager which manages a list of modals currently active\n * inside the viewvontainer\n */\n@Component({\n  selector: 'simple-modal-holder',\n  template: '<ng-template #viewContainer></ng-template>',\n})\nexport class SimpleModalHolderComponent {\n  /**\n   * Target viewContainer to insert modals\n   */\n  @ViewChild('viewContainer', { read: ViewContainerRef, static: true }) viewContainer;\n\n  /**\n   * modal collection, maintained by addModal and removeModal\n   * @type {Array<SimpleModalComponent> }\n   */\n  modals: Array<SimpleModalComponent<any, any>> = [];\n\n  /**\n   * if auto focus is on and no element focused, store it here to be restored back after close\n   */\n  previousActiveElement = null;\n\n  /**\n   * Constructor\n   * @param {ComponentFactoryResolver} resolver\n   */\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    @Inject(DefaultSimpleModalOptionConfig) private defaultSimpleModalOptions: SimpleModalOptions\n  ) {}\n\n  /**\n   * Configures then adds modal to the modals array, and populates with data passed in\n   * @param {Type<SimpleModalComponent>} component\n   * @param {object?} data\n   * @param {SimpleModalOptionsOverrides?} options\n   * @return {Observable<*>}\n   */\n  addModal<T, T1>(\n    component: Type<SimpleModalComponent<T, T1>>,\n    data?: T,\n    options?: SimpleModalOptionsOverrides\n  ): Observable<T1> {\n    // create component\n    if (!this.viewContainer) {\n      return of(null);\n    }\n    const factory = this.resolver.resolveComponentFactory(SimpleModalWrapperComponent);\n    const componentRef = this.viewContainer.createComponent(factory);\n    const modalWrapper: SimpleModalWrapperComponent = <SimpleModalWrapperComponent>(\n      componentRef.instance\n    );\n    const _component: SimpleModalComponent<T, T1> = modalWrapper.addComponent(component);\n\n    // assign options refs\n    _component.options = options = Object.assign({}, this.defaultSimpleModalOptions, options);\n\n    // set base classes for wrapper\n    modalWrapper.modalClasses = options.wrapperDefaultClasses;\n\n    // add to stack\n    this.modals.push(_component);\n\n    // wait a tick then setup the following while adding a modal\n    this.wait().then(() => {\n      this.toggleWrapperClass(modalWrapper.wrapper, options.wrapperClass);\n      this.toggleBodyClass(options.bodyClass);\n      this.wait(options.animationDuration).then(() => {\n        this.autoFocusFirstElement(_component.wrapper, options.autoFocus);\n        _component.markAsReady();\n      });\n    });\n\n    // when closing modal remove it\n    _component.onClosing(modal => this.removeModal(modal));\n\n    // if clicking on background closes modal\n    this.configureCloseOnClickOutside(modalWrapper);\n\n    // map and return observable\n    _component.mapDataObject(data);\n\n    return _component.setupObserver();\n  }\n\n  /**\n   * triggers components close function\n   * to take effect\n   * @param {SimpleModalComponent} component\n   * @returns {Promise<void>}\n   */\n  removeModal(closingModal: SimpleModalComponent<any, any>): Promise<any> {\n    const options = closingModal.options;\n    this.toggleWrapperClass(closingModal.wrapper, options.wrapperClass);\n    return this.wait(options.animationDuration).then(() => {\n      this.removeModalFromArray(closingModal);\n      this.toggleBodyClass(options.bodyClass);\n      this.restorePreviousFocus();\n    });\n  }\n\n  /**\n   * Instructs all open modals to\n   */\n  removeAllModals(): Promise<any> {\n    return Promise.all(this.modals.map(modal => this.removeModal(modal)));\n  }\n\n  /**\n   * Bind a body class 'modal-open' to a condition of modals in pool > 0\n   * @param bodyClass - string to add and remove from body in document\n   */\n  private toggleBodyClass(bodyClass: string) {\n    if (!bodyClass) {\n      return;\n    }\n    const body = document.getElementsByTagName('body')[0];\n    const bodyClassItems = bodyClass.split(' ');\n    if (!this.modals.length) {\n      body.classList.remove(...bodyClassItems);\n    } else {\n      body.classList.add(...bodyClassItems);\n    }\n  }\n\n  /**\n   * if the option to close on background click is set, then hook up a callback\n   * @param options\n   * @param modalWrapper\n   */\n  private configureCloseOnClickOutside(modalWrapper: SimpleModalWrapperComponent) {\n    if (modalWrapper.content.options.closeOnClickOutside) {\n      modalWrapper.onClickOutsideModalContent(\n        modalWrapper.content.options.closeOnClickOutside,\n        () => {\n          modalWrapper.content.close();\n        }\n      );\n    }\n  }\n\n  /**\n   * Auto focus o the first element if autofocus is on\n   * @param options\n   * @param modalWrapperEl\n   */\n  private autoFocusFirstElement(componentWrapper: ElementRef, autoFocus: boolean) {\n    if (autoFocus) {\n      const focusable = componentWrapper.nativeElement.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n      if (focusable && focusable.length) {\n        this.previousActiveElement = document.activeElement;\n        focusable[0].focus();\n      }\n    }\n  }\n\n  /**\n   * Restores the last focus is there was one\n   */\n  private restorePreviousFocus() {\n    if (this.previousActiveElement) {\n      this.previousActiveElement.focus();\n      this.previousActiveElement = null;\n    }\n  }\n\n  /**\n   * Configure the adding and removal of a wrapper class - predominantly animation focused\n   * @param options\n   * @param modalWrapperEl\n   */\n  private toggleWrapperClass(modalWrapperEl: ElementRef, wrapperClass: string) {\n    const wrapperClassList = modalWrapperEl.nativeElement.classList;\n    const wrapperClassItems = wrapperClass.split(' ');\n    if (wrapperClassList.toString().indexOf(wrapperClass) !== -1) {\n      wrapperClassList.remove(...wrapperClassItems);\n    } else {\n      wrapperClassList.add(...wrapperClassItems);\n    }\n  }\n\n  /**\n   * Helper function for a more readable timeout\n   * @param ms\n   */\n  private wait(ms: number = 0) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => resolve(), ms);\n    });\n  }\n\n  /**\n   * Instructs the holder to remove the modal and\n   * removes this component from the collection\n   * @param {SimpleModalComponent} component\n   */\n  private removeModalFromArray(component) {\n    const index = this.modals.indexOf(component);\n    if (index > -1) {\n      this.viewContainer.remove(index);\n      this.modals.splice(index, 1);\n    }\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Optional,\n  Type,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\nimport { SimpleModalComponent } from './simple-modal.component';\nimport { SimpleModalOptionsOverrides } from './simple-modal-options';\n\nexport class SimpleModalServiceConfig {\n  container: HTMLElement | string = null;\n}\n\n@Injectable()\nexport class SimpleModalService {\n  /**\n   * Placeholder of modals\n   * @type {SimpleModalHolderComponent}\n   */\n  private modalHolderComponent: SimpleModalHolderComponent;\n\n  /**\n   * HTML container for modals\n   * type {HTMLElement | string}\n   */\n  private _container;\n\n  /**\n   * @param {ComponentFactoryResolver} resolver\n   * @param {ApplicationRef} applicationRef\n   * @param {Injector} injector\n   * @param {SimpleModalServiceConfig} config\n   */\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector,\n    @Optional() config: SimpleModalServiceConfig\n  ) {\n    if (config) {\n      this.container = config.container as any;\n    }\n  }\n\n  /**\n   * Adds modal\n   * @param {Type<SimpleModalComponent<T, T1>>} component\n   * @param {T?} data\n   * @param {SimpleModalOptionsOverrides?} options\n   * @return {Observable<T1>}\n   */\n  addModal<T, T1>(\n    component: Type<SimpleModalComponent<T, T1>>,\n    data?: T,\n    options?: SimpleModalOptionsOverrides\n  ): Observable<T1> {\n    if (!this.modalHolderComponent) {\n      this.modalHolderComponent = this.createSimpleModalHolder();\n    }\n    return this.modalHolderComponent.addModal<T, T1>(component, data, options);\n  }\n\n  /**\n   * Hides and removes modal from DOM, resolves promise when fully removed\n   * @param {SimpleModalComponent} component\n   * @return {Promise<{}>}\n\n   */\n  removeModal(component: SimpleModalComponent<any, any>): Promise<{}> {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeModal(component);\n  }\n\n  /**\n   * Closes all modals, resolves promise when they're fully removed\n   * @return {Promise<{}>}\n   */\n  removeAll(): Promise<{}> {\n    if (!this.modalHolderComponent) {\n      return Promise.resolve({});\n    }\n    return this.modalHolderComponent.removeAllModals();\n  }\n\n  /**\n   * Accessor for contain - will auto generate from string\n   * if needed or default to the root element if nothing was set\n   */\n\n  private set container(c) {\n    this._container = c;\n  }\n\n  private get container(): HTMLElement {\n    if (typeof this._container === 'string') {\n      this._container = document.getElementById(this._container);\n    }\n\n    if (!this._container && this.applicationRef['components'].length) {\n      const componentRootViewContainer = this.applicationRef['components'][0];\n      this.container = (componentRootViewContainer.hostView as EmbeddedViewRef<any>)\n        .rootNodes[0] as HTMLElement;\n    }\n\n    // fallback\n    if (!this._container || typeof this._container === 'string') {\n      this._container = document.getElementsByTagName('body')[0];\n    }\n\n    return this._container;\n  }\n\n  /**\n   * Creates and add to DOM modal holder component\n   * @return {SimpleModalHolderComponent}\n   */\n  private createSimpleModalHolder(): SimpleModalHolderComponent {\n    const componentFactory = this.resolver.resolveComponentFactory(SimpleModalHolderComponent);\n\n    const componentRef = componentFactory.create(this.injector);\n    const componentRootNode = (componentRef.hostView as EmbeddedViewRef<any>)\n      .rootNodes[0] as HTMLElement;\n\n    this.applicationRef.attachView(componentRef.hostView);\n\n    componentRef.onDestroy(() => {\n      this.applicationRef.detachView(componentRef.hostView);\n    });\n\n    this.container.appendChild(componentRootNode);\n\n    return componentRef.instance;\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injector } from '@angular/core';\n\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\n\n/**\n * Modal service factory. Creates modal service with options\n * @param { ComponentFactoryResolver } resolver\n * @param { ApplicationRef } applicationRef\n * @param { Injector } injector\n * @param { SimpleModalServiceConfig } options\n * @return { SimpleModalService }\n */\nexport function SimpleModalServiceFactory(resolver: ComponentFactoryResolver,\n                                          applicationRef: ApplicationRef,\n                                          injector: Injector,\n                                          options: SimpleModalServiceConfig) {\n    return new SimpleModalService(resolver, applicationRef, injector, options);\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Injector,\n  ModuleWithProviders,\n  NgModule,\n} from '@angular/core';\n\nimport { SimpleModalHolderComponent } from './simple-modal-holder.component';\nimport { SimpleModalWrapperComponent } from './simple-modal-wrapper.component';\nimport { SimpleModalService, SimpleModalServiceConfig } from './simple-modal.service';\nimport { SimpleModalServiceFactory } from './simple-modal-service.factory';\nimport {\n  defaultSimpleModalOptions,\n  DefaultSimpleModalOptionConfig,\n  SimpleModalOptions,\n} from './simple-modal-options';\n\n@NgModule({\n  declarations: [SimpleModalHolderComponent, SimpleModalWrapperComponent],\n  providers: [\n    SimpleModalService,\n    {\n      provide: DefaultSimpleModalOptionConfig,\n      useValue: defaultSimpleModalOptions,\n    },\n  ],\n  imports: [CommonModule],\n  entryComponents: [SimpleModalHolderComponent, SimpleModalWrapperComponent],\n})\nexport class SimpleModalModule {\n  static forRoot(\n    config: SimpleModalServiceConfig,\n    defaultModalOptions?: SimpleModalOptions\n  ): ModuleWithProviders {\n    return {\n      ngModule: SimpleModalModule,\n      providers: [\n        { provide: SimpleModalServiceConfig, useValue: config },\n        {\n          provide: SimpleModalService,\n          useFactory: SimpleModalServiceFactory,\n          deps: [ComponentFactoryResolver, ApplicationRef, Injector, SimpleModalServiceConfig],\n        },\n        {\n          provide: DefaultSimpleModalOptionConfig,\n          useValue: defaultModalOptions || defaultSimpleModalOptions,\n        },\n      ],\n    };\n  }\n\n  constructor() {}\n}\n","import { ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Observable, Observer, Subject, BehaviorSubject } from 'rxjs';\n\nimport { SimpleModalOptions } from './simple-modal-options';\n\nexport interface OnDestroyLike {\n  ngOnDestroy(): void;\n  [key: string]: any;\n}\n\n/**\n * Abstract modal\n * @template T - modal data;\n * @template T1 - modal result\n */\nexport abstract class SimpleModalComponent<T, T1> implements OnDestroy {\n  /**\n   * Observer to return result from modal\n   */\n  private observer: Observer<T1>;\n\n  /**\n   * Dialog result\n   * @type {T1}\n   */\n  result: T1;\n\n  /**\n   * Dialog wrapper (modal placeholder)\n   */\n  wrapper: ElementRef;\n\n  /**\n   * ref of options for this component\n   */\n  options: SimpleModalOptions;\n\n  /**\n   * ready$ is when all animations and focusing have comleted\n   */\n  _ready$ = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Callback to the holders close function\n   */\n  private closerCallback: (component) => Promise<any> = () => Promise.resolve();\n\n  /**\n   * Constructor\n   */\n  constructor() {}\n\n  /**\n   * Maps your object passed in the creation to fields in your own Dialog classes\n   * @param {T} data\n   */\n  mapDataObject(data: T): void {\n    data = data || <T>{};\n    const keys = Object.keys(data);\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      if (typeof data[key] === 'object' && typeof this[key] === 'object') {\n        Object.assign(this[key], data[key]);\n      } else {\n        this[key] = data[key];\n      }\n    }\n  }\n\n  /**\n   * Setup observer\n   * @return {Observable<T1>}\n   */\n  setupObserver(): Observable<T1> {\n    return Observable.create(observer => {\n      this.observer = observer;\n\n      this.completeOnDestroy(this);\n\n      // called if observable is unsubscribed to\n      return () => {\n        this.close();\n      };\n    });\n  }\n\n  /**\n   * Defines what happens when close is called - default this\n   * will just call the default remove modal process. If overriden\n   * must include\n   * @param callback\n   */\n  onClosing(callback: (component: SimpleModalComponent<any, any>) => Promise<any>): void {\n    this.closerCallback = callback;\n  }\n\n  /**\n   * Closes modal\n   */\n  close(): Promise<any> {\n    return this.closerCallback(this);\n  }\n\n  /**\n   * keypress binding ngx way\n   * @param evt\n   */\n  @HostListener('document:keydown.escape', ['$event'])\n  onKeydownHandler(evt: KeyboardEvent) {\n    if (this.options && this.options.closeOnEscape) {\n      this.close();\n    }\n  }\n\n  get ready$() {\n    return this._ready$.asObservable();\n  }\n\n  markAsReady() {\n    this._ready$.next(true);\n  }\n\n  /**\n   * wrap the ngOnDestroy safely so that implementers can make their own\n   * destroy functions safely.\n   * @param component\n   */\n  private completeOnDestroy(component: OnDestroyLike) {\n    const ngDestroyOriginal = component.ngOnDestroy;\n    component.ngOnDestroy = () => {\n      if (ngDestroyOriginal) {\n        ngDestroyOriginal.apply(component);\n      }\n      if (this.observer) {\n        this.observer.next(this.result);\n        this.observer.complete();\n      }\n    };\n  }\n\n  ngOnDestroy() {\n    // empty but needed\n  }\n}\n"]}